name: Build

on:
  workflow_dispatch:
  push:
    paths:
      - 'release_build.txt'

jobs:
  linux:
    name: Build Linux

    env:
      NODE_PRE_GYP_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      CARGO_NET_GIT_FETCH_WITH_CLI: true

    strategy:
      matrix:
        node-version: [ 22.x ]
        target:
          - x86_64-unknown-linux-gnu
        include:
          - target: x86_64-unknown-linux-gnu
            architecture: x64

    runs-on: ubuntu-latest

    timeout-minutes: 30

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1

    - name: Configure git for private repos
      env:
        TOKEN: ${{ secrets.GH_TOKEN }}
      run: git config --global url."https://${TOKEN}:x-oauth-basic@github.com/".insteadOf "https://github.com/"

    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: ~/.cargo/registry
        key: cargo-registry-${{ runner.os }}-${{ hashFiles('Cargo.lock') }}

    - name: Cache cargo bin
      uses: actions/cache@v4
      with:
        path: ~/.cargo/bin
        key: cargo-bin-${{ runner.os }}-${{ hashFiles('Cargo.lock') }}

    - name: Cache cargo build
      uses: actions/cache@v4
      with:
        path: target
        key: cargo-build-target-${{ runner.os }}-${{ hashFiles('Cargo.lock') }}

    - uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        target: ${{ matrix.target }}

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install dependencies
      run: yarn install --mode=skip-build

    - name: Build
      run: yarn build --target=${{ matrix.target }}

    - name: Strip binary
      run: strip ce.node

    # - name: Test
    #   run: yarn test

    - name: Publish
      run: |
        yarn package --target_arch=${{ matrix.architecture }}
        yarn upload-binary

  windows:
    name: Build Windows

    env:
      NODE_PRE_GYP_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      CARGO_NET_GIT_FETCH_WITH_CLI: true

    strategy:
      matrix:
        node-version: [ 22.x ]
        target: [ x86_64-pc-windows-msvc, aarch64-pc-windows-msvc ]
        include:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            architecture: x64
          - os: windows-11-arm
            target: aarch64-pc-windows-msvc
            architecture: arm64

    runs-on: ${{ matrix.os }}

    timeout-minutes: 30

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1

    - name: Configure git for private repos
      env:
        TOKEN: ${{ secrets.GH_TOKEN }}
      run: git config --global url."https://${TOKEN}:x-oauth-basic@github.com/".insteadOf "https://github.com/"

    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: ~/.cargo/registry
        key: cargo-registry-${{ runner.os }}-${{ hashFiles('Cargo.lock') }}

    - name: Cache cargo bin
      uses: actions/cache@v4
      with:
        path: ~/.cargo/bin
        key: cargo-bin-${{ runner.os }}-${{ hashFiles('Cargo.lock') }}

    - name: Cache cargo build
      uses: actions/cache@v4
      with:
        path: target
        key: cargo-build-target-${{ runner.os }}-${{ hashFiles('Cargo.lock') }}

    - uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        target: ${{ matrix.target }}

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install dependencies
      run: yarn install --mode=skip-build

    - name: Build
      run: yarn build --target=${{ matrix.target }}

    # - name: Test
    #   run: yarn test

    - name: Publish
      run: |
        yarn package --target_arch=${{ matrix.architecture }}
        yarn upload-binary

  macos:
    name: Build MacOS

    env:
      NODE_PRE_GYP_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      CARGO_NET_GIT_FETCH_WITH_CLI: true

    strategy:
      matrix:
        node-version: [ 22.x ]
        target:
          - x86_64-apple-darwin
          - aarch64-apple-darwin
        include:
          - target: x86_64-apple-darwin
            architecture: x64
          - target: aarch64-apple-darwin
            architecture: arm64

    runs-on: macos-latest

    timeout-minutes: 30

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1

    - name: Configure git for private repos
      env:
        TOKEN: ${{ secrets.GH_TOKEN }}
      run: git config --global url."https://${TOKEN}:x-oauth-basic@github.com/".insteadOf "https://github.com/"

    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: ~/.cargo/registry
        key: cargo-registry-${{ runner.os }}-${{ hashFiles('Cargo.lock') }}

    - name: Cache cargo bin
      uses: actions/cache@v4
      with:
        path: ~/.cargo/bin
        key: cargo-bin-${{ runner.os }}-${{ hashFiles('Cargo.lock') }}

    - name: Cache cargo build
      uses: actions/cache@v4
      with:
        path: target
        key: cargo-build-target-${{ runner.os }}-${{ hashFiles('Cargo.lock') }}

    - uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        target: ${{ matrix.target }}

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install dependencies
      run: yarn install --mode=skip-build

    - name: Build
      run: yarn build --target=${{ matrix.target }}

    - name: Strip binary
      run: strip -ru ce.node

    # Until GH action adds M1 runners, can't run aarch64 libs
    # - name: Test
    #   if: ${{ matrix.architecture == 'x64' }}
    #   run: yarn test

    - name: Publish
      run: |
        yarn package --target_arch=${{ matrix.architecture }}
        yarn upload-binary
